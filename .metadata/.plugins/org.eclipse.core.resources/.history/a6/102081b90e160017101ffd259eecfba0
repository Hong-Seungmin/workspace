import java.util.Scanner;

public class Tic_Tac_Toe {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		char[][] board = new char[3][3];
		int x, y;

		Scanner scan = new Scanner(System.in);

		for (int i = 0; i < 3; i++)
			for (int j = 0; j < 3; j++)
				board[i][j] = ' ';

		do {
			set_com(board); //컴퓨터 자리 선정

			for (int i = 0; i < 3; i++) {
				System.out.println("  " + board[i][0] + "|  " + board[i][1] + "|  " + board[i][2]);
				if (i != 2)
					System.out.println("---|---|---");
			}

			System.out.print("다음 수의 좌표를 입력하시오");
			x = scan.nextInt();
			y = scan.nextInt();

			if (board[x][y] != ' ') {
				System.out.println("잘못된 위치입니다.");
				continue;
			} else
				board[x][y] = 'X';

			/*
			 * int i = 0, j = 0; for (i = 0; i < 3; i++) { for (j = 0; j < 3;
			 * j++) if (board[i][j] == ' ') break; if (board[i][j<3?j:2] == ' ')
			 * //안쪽 for문 탈출시 j값이 3넘으면 오류.3을 2로 변경 break; } if (i < 3 && j < 3)
			 * board[i][j] = 'O';
			 */
		} while (true);
	}

	static void set_com(char[][] board) {
		int[] rank = new int[9];

		if (board[0][0] == ' ') {
			if (board[0][1] == ' ' || board[0][2] == ' ') {
				rank[0]++;
			}
			if (board[1][1] == ' ' || board[1][2] == ' ') {
				rank[0]++;
			}
			if (board[1][0] == ' ' || board[2][0] == ' ') {
				rank[0]++;
			}
		}
		if (board[0][1] == ' ') {
			if (board[1][1] == ' ' || board[2][1] == ' ') {
				rank[1]++;
			}
			if (board[0][0] == ' ' || board[0][2] == ' ') {
				rank[1]++;
			}
		}
		if (board[0][2] == ' ') {
			if (board[0][0] == ' ' || board[0][1] == ' ') {
				rank[2]++;
			}
			if (board[1][1] == ' ' || board[2][0] == ' ') {
				rank[2]++;
			}
			if (board[1][2] == ' ' || board[2][2] == ' ') {
				rank[2]++;
			}
		}
		if (board[1][0] == ' ') {
			if (board[0][0] == ' ' || board[2][0] == ' ') {
				rank[3]++;
			}
			if (board[1][1] == ' ' || board[1][2] == ' ') {
				rank[3]++;
			}
		}
		if (board[1][1] == ' ') {
			if (board[0][0] == ' ' || board[2][2] == ' ') {
				rank[4]++;
			}
			if (board[0][1] == ' ' || board[2][1] == ' ') {
				rank[4]++;
			}
			if (board[0][2] == ' ' || board[2][0] == ' ') {
				rank[4]++;
			}
			if (board[1][0] == ' ' || board[1][2] == ' ') {
				rank[4]++;
			}
		}
		if (board[1][2] == ' ') {
			if (board[0][2] == ' ' || board[2][2] == ' ') {
				rank[5]++;
			}
			if (board[1][0] == ' ' || board[1][1] == ' ') {
				rank[5]++;
			}
		}
		if (board[2][0] == ' ') {
			if (board[0][0] == ' ' || board[1][0] == ' ') {
				rank[6]++;
			}
			if (board[1][1] == ' ' || board[0][2] == ' ') {
				rank[6]++;
			}
			if (board[2][1] == ' ' || board[2][2] == ' ') {
				rank[6]++;
			}
		}
		if (board[2][1] == ' ') {
			if (board[0][1] == ' ' || board[1][1] == ' ') {
				rank[7]++;
			}
			if (board[2][0] == ' ' || board[2][2] == ' ') {
				rank[7]++;
			}
		}
		if (board[2][2] == ' ') {
			if (board[0][0] == ' ' || board[1][1] == ' ') {
				rank[8]++;
			}
			if (board[0][2] == ' ' || board[1][2] == ' ') {
				rank[8]++;
			}
			if (board[2][0] == ' ' || board[2][1] == ' ') {
				rank[8]++;
			}
		}

		int tmp=0;
		for (int i = 0; i < 8; i++) {
			System.out.println(rank[i]);
			if (rank[i] < rank[i + 1])
				tmp = i + 1;
		}

		switch (tmp) {
		case 0:
			board[0][0]='O'; break;
		case 1:
			board[0][1]='O'; break;
		case 2:
			board[0][2]='O'; break;
		case 3:
			board[1][0]='O'; break;
		case 4:
			board[1][1]='O'; break;
		case 5:
			board[1][2]='O'; break;
		case 6:
			board[2][0]='O'; break;
		case 7:
			board[2][1]='O'; break;
		case 8:
			board[2][2]='O'; break;
		}
	}
}